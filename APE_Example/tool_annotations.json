{
    "functions": [
      {
        "label": "create_project",
        "id": "create_project",
        "taxonomyOperations": ["CreateProject"],
        "outputs": [
          { "Type": ["Project"], "Format": ["pyiron_atomistics.project.Project"] }
        ],
        "implementation": { "code": "python - << EOF\nfrom pyiron.project import Project\npr = Project('bulk_Al')\n" }
      },
      {
        "label": "create_structure_pristinebulk",
        "id": "create_structure_pristinebulk",
        "taxonomyOperations": ["CreateStructurePristineBulk"],
        "inputs": [
          { "Type": ["Project"] }
        ],
        "outputs": [
          { "Type": ["PristineBulk"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "structure = pr.create.structure.ase.bulk('Al', cubic=True)\n" }
      },
      {
        "label": "create_structure_genericbulk",
        "id": "create_structure_genericbulk",
        "taxonomyOperations": ["CreateStructureGenericBulk"],
        "inputs": [
          { "Type": ["Project"] }
        ],
        "outputs": [
          { "Type": ["GenericBulk"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "structure = pr.create.structure.ase.bulk('Al', cubic=True)\ndel structure[[1]]\n" }
      },
      {
        "label": "create_structure_slab",
        "id": "create_structure_slab",
        "taxonomyOperations": ["CreateStructureSlab"],
        "inputs": [
          { "Type": ["Project"] }
        ],
        "outputs": [
          { "Type": ["Slab"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "structure = pr.create_surface('Al', surface_type='fcc111', size=(3, 4, 4), vacuum=10, orthogonal=True)\n" }
      },
      {
        "label": "create_vacancy",
        "id": "create_vacancy",
        "taxonomyOperations": ["CreateVacancy"],
        "inputs": [
          { "Type": ["PristineBulk"] }
        ],
        "outputs": [
          { "Type": ["VacancyStructure"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "Create Vacancy Structure\n" }
      },
      {
        "label": "relax_structure",
        "id": "relax_structure",
        "taxonomyOperations": ["RelaxStructure"],
        "inputs": [
          { "Type": ["VacancyStructure"] }
        ],
        "outputs": [
          { "Type": ["RelaxedVacancyStructure"], "Format": ["pyiron_atomistics.atomistics.structure.atoms.Atoms"] }
        ],
        "implementation": { "code": "Relax Structure\n" }
      },
      {
        "label": "create_job_lammps",
        "id": "create_job_lammps",
        "taxonomyOperations": ["CreateJobLammps"],
        "inputs": [
          { "Type": ["Project"] },
          { "Type": ["Structure"] }
        ],
        "outputs": [
          { "Type": ["LammpsGeneral"], "Format": ["pyiron_atomistics.lammps.lammps.Lammps"] }
        ],
        "implementation": { "code": "job = pr.create_job(job_type=pr.job_type.Lammps, job_name='lammps')\njob.structure = structure\n" }
      },
      {
        "label": "create_job_gpaw",
        "id": "create_job_gpaw",
        "taxonomyOperations": ["CreateJobGpaw"],
        "inputs": [
          { "Type": ["Project"] },
          { "Type": ["Structure"] }
        ],
        "outputs": [
          { "Type": ["GPAW"], "Format": ["pyiron_atomistics.gpaw.gpaw.Gpaw"] }
        ],
        "implementation": { "code": "job = pr.create_job(job_type=pr.job_type.Gpaw, job_name='gpaw_job')\njob.structure = structure\n" }
      },
      {
        "label": "create_job_sphinx",
        "id": "create_job_sphinx",
        "taxonomyOperations": ["CreateJobSphinx"],
        "inputs": [
          { "Type": ["Project"] },
          { "Type": ["Structure"] }
        ],
        "outputs": [
          { "Type": ["Sphinx"], "Format": ["pyiron_atomistics.sphinx.sphinx.Sphinx"] }
        ],
        "implementation": { "code": "job = pr.create_job(job_type=pr.job_type.Sphinx, job_name='sphinx_job')\njob.structure = structure\n" }
      },
      {
        "label": "create_job_vasp",
        "id": "create_job_vasp",
        "taxonomyOperations": ["CreateJobVasp"],
        "inputs": [
          { "Type": ["Project"] },
          { "Type": ["Structure"] }
        ],
        "outputs": [
          { "Type": ["VASP"], "Format": ["pyiron_atomistics.vasp.vasp.Vasp"] }
        ],
        "implementation": { "code": "job = pr.create_job(job_type=pr.job_type.Vasp, job_name='vasp_job')\njob.structure = structure\n" }
      },
      {
        "label": "create_job_murn",
        "id": "create_job_murn",
        "taxonomyOperations": ["CreateJobMurnaghan"],
        "inputs": [
          { "Type": ["Project"] },
          { "Type": ["DFT", "LammpsGeneral"] }
        ],
        "outputs": [
          { "Type": ["Murnaghan"], "Format": ["pyiron_atomistics.atomistics.master.murnaghan.Murnaghan"] }
        ],
        "implementation": { "code": "murn = pr.create_job(job_type=pr.job_type.Murnaghan, job_name='murn')\nmurn.ref_job = job\n" }
      },
      {
        "label": "run_job_lammps",
        "id": "run_job_lammps",
        "taxonomyOperations": ["RunLammpsJob"],
        "inputs": [
          { "Type": ["LammpsCalcMDJob"] }
        ],
        "outputs": [
          { "Type": ["LammpsCalcMDJob"], "Format": ["pyiron_atomistics.lammps.lammps.Lammps"] }
        ],
        "implementation": { "code": "job.run(delete_existing_job=True)\n" }
      },
      {
        "label": "run_job_murn",
        "id": "run_job_murn",
        "taxonomyOperations": ["RunMurnaghanJob"],
        "inputs": [
          { "Type": ["Murnaghan"] }
        ],
        "outputs": [
          { "Type": ["Murnaghan"], "Format": ["pyiron_atomistics.atomistics.master.murnaghan.Murnaghan"] }
        ],
        "implementation": { "code": "murn.run(delete_existing_job=True)\n" }
      },
      {
        "label": "calc_md",
        "id": "calc_md",
        "taxonomyOperations": ["CalcMD"],
        "inputs": [
          { "Type": ["Lammps"] }
        ],
        "outputs": [
          { "Type": ["LammpsCalcMDJob"], "Format": ["pyiron_atomistics.lammps.lammps.Lammps"] }
        ],
        "implementation": { "code": "job.calc_md(temperature=800, pressure=0, n_ionic_steps=10000)\n" }
      },
      {
        "label": "select_potential_lammps_angelo",
        "id": "select_potential_lammps_angelo",
        "taxonomyOperations": ["SelectPotentialAngelo"],
        "inputs": [
          { "Type": ["LammpsGeneral"] }
        ],
        "outputs": [
          { "Type": ["LammpsGeneral"], "Format": ["pyiron_atomistics.lammps.lammps.Lammps"] }
        ],
        "implementation": { "code": "job.potential = '1995--Angelo-J-E--Ni-Al-H--LAMMPS--ipr1'\n" }
      },
      {
        "label": "select_potential_lammps_farkas",
        "id": "select_potential_lammps_farkas",
        "taxonomyOperations": ["SelectPotentialFarkas"],
        "inputs": [
          { "Type": ["LammpsGeneral"] }
        ],
        "outputs": [
          { "Type": ["LammpsGeneral"], "Format": ["pyiron_atomistics.lammps.lammps.Lammps"] }
        ],
        "implementation": { "code": "job.potential = '1996--Farkas-D--Nb-Ti-Al--LAMMPS--ipr1'\n" }
      },
      {
        "label": "calculate_vacancy_formation_energy",
        "id": "calculate_vacancy_formation_energy",
        "taxonomyOperations": ["CalculateVacancyFormationEnergy"],
        "inputs": [
          { "Type": ["RelaxedVacancyStructure"] },
          { "Type": ["PristineBulk"] }
        ],
        "outputs": [
          { "Type": ["VacancyFormationEnergy"], "Format": ["Float"] }
        ],
        "implementation": { "code": "Calculate Vacancy Formation Energy\nEOF\n" }
      },
      {
        "label": "get_property_bulkmodulus",
        "id": "get_property_bulkmodulus",
        "taxonomyOperations": ["GetBulkModulus"],
        "inputs": [
          { "Type": ["Murnaghan"] }
        ],
        "outputs": [
          { "Type": ["BulkModulus"], "Format": ["Float"] }
        ],
        "implementation": { "code": "print(pr['murn']['output/equilibrium_bulk_modulus'])\nEOF\n" }
      },
      {
        "label": "get_output_MD",
        "id": "get_output_MD",
        "taxonomyOperations": ["GetMDOutput"],
        "inputs": [
          { "Type": ["LammpsCalcMDJob"] }
        ],
        "outputs": [
          { "Type": ["MolecularDynamicsOutput"], "Format": ["Array"] }
        ],
        "implementation": { "code": "print(job['output/generic/temperature'])\nEOF\n" }
      }
    ]
 }
